
@inproceedings{amselGreenTrackerTool2010,
  title = {Green Tracker: A Tool for Estimating the Energy Consumption of Software},
  shorttitle = {Green Tracker},
  booktitle = {Proceedings of the 28th of the International Conference Extended Abstracts on {{Human}} Factors in Computing Systems - {{CHI EA}} '10},
  author = {Amsel, Nadine and Tomlinson, Bill},
  date = {2010},
  pages = {3337},
  publisher = {{ACM Press}},
  location = {{Atlanta, Georgia, USA}},
  doi = {10.1145/1753846.1753981},
  url = {http://portal.acm.org/citation.cfm?doid=1753846.1753981},
  urldate = {2020-04-20},
  abstract = {The energy consumption of computers has become an important environmental issue. This paper describes the development of Green Tracker, a tool that estimates the energy consumption of software in order to help concerned users make informed decisions about the software they use. We present preliminary results gathered from this system’s initial usage. Ultimately the information gathered from this tool will be used to raise awareness and help make the energy consumption of software a more central concern among software developers.},
  eventtitle = {The 28th of the International Conference Extended Abstracts},
  file = {/home/mael/Zotero/storage/VGCHK5GQ/Amsel et Tomlinson - 2010 - Green tracker a tool for estimating the energy co.pdf},
  isbn = {978-1-60558-930-5},
  langid = {english}
}

@article{beckerKarlskronaManifestoSustainability2015,
  title = {The {{Karlskrona}} Manifesto for Sustainability Design},
  author = {Becker, Christoph and Chitchyan, Ruzanna and Duboc, Leticia and Easterbrook, Steve and Mahaux, Martin and Penzenstadler, Birgit and Rodriguez-Navas, Guillermo and Salinesi, Camille and Seyff, Norbert and Venters, Colin and Calero, Coral and Kocak, Sedef Akinli and Betz, Stefanie},
  date = {2015-05-10},
  url = {http://arxiv.org/abs/1410.6968},
  urldate = {2020-04-16},
  abstract = {Sustainability is a central concern for our society, and software systems increasingly play a central role in it. As designers of software technology, we cause change and are responsible for the effects of our design choices. We recognize that there is a rapidly increasing awareness of the fundamental need and desire for a more sustainable world, and there is a lot of genuine goodwill. However, this alone will be ineffective unless we come to understand and address our persistent misperceptions. The Karlskrona Manifesto for Sustainability Design aims to initiate a much needed conversation in and beyond the software community by highlighting such perceptions and proposing a set of fundamental principles for sustainability design.},
  archivePrefix = {arXiv},
  eprint = {1410.6968},
  eprinttype = {arxiv},
  file = {/home/mael/Zotero/storage/TTL548TE/Becker et al. - 2015 - The Karlskrona manifesto for sustainability design.pdf},
  keywords = {Computer Science - General Literature,Computer Science - Software Engineering},
  langid = {english},
  primaryClass = {cs}
}

@inproceedings{beckerSustainabilityDesignSoftware2015,
  title = {Sustainability {{Design}} and {{Software}}: {{The Karlskrona Manifesto}}},
  shorttitle = {Sustainability {{Design}} and {{Software}}},
  author = {Becker, Christoph and Chitchyan, Ruzanna and Duboc, Leticia and Easterbrook, Steve and Penzenstadler, Birgit and Seyff, Norbert and Venters, Colin C.},
  date = {2015-05},
  pages = {467--476},
  publisher = {{IEEE}},
  location = {{Florence, Italy}},
  doi = {10.1109/ICSE.2015.179},
  url = {http://ieeexplore.ieee.org/document/7202997/},
  urldate = {2020-01-28},
  abstract = {Sustainability has emerged as a broad concern for society. Many engineering disciplines have been grappling with challenges in how we sustain technical, social and ecological systems. In the software engineering community, for example, maintainability has been a concern for a long time. But too often, these issues are treated in isolation from one another. Misperceptions among practitioners and research communities persist, rooted in a lack of coherent understanding of sustainability, and how it relates to software systems research and practice. This article presents a cross-disciplinary initiative to create a common ground and a point of reference for the global community of research and practice in software and sustainability, to be used for effectively communicating key issues, goals, values and principles of sustainability design for software-intensive systems. The centrepiece of this effort is the Karlskrona Manifesto for Sustainability Design, a vehicle for a much needed conversation about sustainability within and beyond the software community, and an articulation of the fundamental principles underpinning design choices that affect sustainability. We describe the motivation for developing this manifesto, including some considerations of the genre of the manifesto as well as the dynamics of its creation. We illustrate the collaborative reflective writing process and present the current edition of the manifesto itself. We assess immediate implications and applications of the articulated principles, compare these to current practice, and suggest future steps.},
  eventtitle = {2015 {{IEEE}}/{{ACM}} 37th {{IEEE International Conference}} on {{Software Engineering}} ({{ICSE}})},
  file = {/home/mael/Zotero/storage/UZTPC5MR/Becker et al. - 2015 - Sustainability Design and Software The Karlskrona.pdf},
  isbn = {978-1-4799-1934-5},
  langid = {english}
}

@article{beckerSustainabilityLongevityTwo2014,
  title = {Sustainability and Longevity: {{Two}} Sides of the Same Quality?},
  author = {Becker, Christoph},
  date = {2014},
  journaltitle = {mental},
  volume = {20},
  pages = {21},
  file = {/home/mael/Zotero/storage/RVLMMI42/Becker - Sustainability and Longevity Two Sides of the Sam.pdf}
}

@article{beckManifestoAgileSoftware2001,
  title = {Manifesto for Agile Software Development},
  author = {Beck, Kent and Beedle, Mike and Van Bennekum, Arie and Cockburn, Alistair and Cunningham, Ward and Fowler, Martin and Grenning, James and Highsmith, Jim and Hunt, Andrew and Jeffries, Ron},
  date = {2001}
}

@article{belkhirAssessingICTGlobal2018,
  title = {Assessing {{ICT}} Global Emissions Footprint: {{Trends}} to 2040 \& Recommendations},
  shorttitle = {Assessing {{ICT}} Global Emissions Footprint},
  author = {Belkhir, Lotfi and Elmeligi, Ahmed},
  date = {2018-03},
  journaltitle = {Journal of Cleaner Production},
  shortjournal = {Journal of Cleaner Production},
  volume = {177},
  pages = {448--463},
  issn = {09596526},
  doi = {10.1016/j.jclepro.2017.12.239},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S095965261733233X},
  urldate = {2019-06-26},
  abstract = {In light of the concerted efforts to reduce global greenhouse gas emissions (GHGE) per the so-called Paris Agreement, the Information and Communication Industry (ICT) has received little attention as a significant contributor to GHGE and if anything is often highly praised for enabling efficiencies that help reduce other industry sectors footprint. In this paper, we aim at assessing the global carbon footprint of the overall ICT industry, including the contribution from the main consumer devices, the data centers and communication networks, and compare it with the to the total worldwide GHGE. We conduct a detailed and rigorous analysis of the ICT global carbon footprint, including both the production and the operational energy of ICT devices, as well as the operational energy for the supporting ICT infrastructure. We then compare this contribution to the global 2016-level GHGE. We have found that, if unchecked, ICT GHGE relative contribution could grow from roughly 1e1.6\% in 2007 to exceed 14\% of the 2016-level worldwide GHGE by 2040, accounting for more than half of the current relative contribution of the whole transportation sector. Our study also highlights the contribution of smart phones and shows that by 2020, the footprint of smart phones alone would surpass the individual contribution of desktops, laptops and displays. Finally, we offer some actionable recommendations on how to mitigate and curb the ICT explosive GHGE footprint, through a combination of renewable energy use, tax policies, managerial actions and alternative business models.},
  file = {/home/mael/Zotero/storage/CVVWVJW4/Belkhir et Elmeligi - 2018 - Assessing ICT global emissions footprint Trends t.pdf},
  langid = {english}
}

@article{ebertDevOps2016,
  title = {{{DevOps}}},
  author = {Ebert, Christof and Gallardo, Gorka and Hernantes, Josune and Serrano, Nicolas},
  date = {2016-05},
  journaltitle = {IEEE Software},
  volume = {33},
  pages = {94--100},
  issn = {1937-4194},
  doi = {10.1109/MS.2016.68},
  abstract = {Building on lean and agile practices, DevOps means end-to-end automation in software development and delivery. Hardly anybody will be able to approach it with a cookbook-style approach, but most developers will benefit from better connecting the previously isolated silos of development and operations. Many DevOps tools exist that can help them do this.},
  eventtitle = {{{IEEE Software}}},
  file = {/home/mael/Zotero/storage/LCTVYBBR/Ebert et al. - 2016 - DevOps.pdf;/home/mael/Zotero/storage/CHCYZ9RM/7458761..html},
  keywords = {Amazon Web Services,Ansible,apache Ant,Automation,AWS,Bamboo,Cacti,Chef,Cloud computing,configuration management,continuous integration,cookbook-style approach,DevOps,DSL,Gradle,Graylog2,Java,Jenkins,Logging,Loggly,Maven,microservices,Monitoring,Nagios,New Relic,Production,Puppet,software delivery,software development,software engineering,TeamCity},
  number = {3}
}

@incollection{gossartReboundEffectsICT2015,
  title = {Rebound Effects and {{ICT}}: A Review of the Literature},
  booktitle = {{{ICT}} Innovations for Sustainability},
  author = {Gossart, Cédric},
  date = {2015},
  pages = {435--448},
  publisher = {{Springer}}
}

@incollection{heinbergWhatSustainability2010,
  title = {What {{Is Sustainability}}?},
  booktitle = {The {{Post Carbon Reader}}: {{Managing}} the 21st {{Century}}’s {{Sustainability Crises}}},
  author = {Heinberg, Richard and Lerch, Daniel},
  date = {2010},
  edition = {Healdsburg, CA: Watershed Media},
  file = {/home/mael/Zotero/storage/9T5IJQR6/1_def_sustainability.pdf},
  langid = {english}
}

@incollection{hiltyIctSustainabilityEmerging2015,
  title = {Ict for Sustainability: {{An}} Emerging Research Field},
  booktitle = {{{ICT Innovations}} for {{Sustainability}}},
  author = {Hilty, Lorenz M. and Aebischer, Bernard},
  date = {2015},
  pages = {3--36},
  publisher = {{Springer}},
  file = {/home/mael/Zotero/storage/KKEQKJJV/Hilty et Aebischer - 2015 - Ict for sustainability An emerging research field.pdf}
}

@inproceedings{jabbariWhatDevOpsSystematic2016,
  title = {What Is {{DevOps}}? {{A}} Systematic Mapping Study on Definitions and Practices},
  booktitle = {Proceedings of the {{Scientific Workshop Proceedings}} of {{XP2016}}},
  author = {Jabbari, Ramtin and bin Ali, Nauman and Petersen, Kai and Tanveer, Binish},
  date = {2016},
  pages = {1--11},
  options = {useprefix=true}
}

@incollection{jeyamalaGreenSoftwareTesting2020,
  title = {Towards {{Green Software Testing}} in {{Agile}} and {{DevOps Using Cloud Virtualization}} for {{Environmental Protection}}},
  booktitle = {Software {{Engineering}} in the {{Era}} of {{Cloud Computing}}},
  author = {Jeya Mala, D. and Pradeep Reynold, A.},
  editor = {Ramachandran, Muthu and Mahmood, Zaigham},
  date = {2020},
  pages = {277--297},
  publisher = {{Springer International Publishing}},
  location = {{Cham}},
  doi = {10.1007/978-3-030-33624-0_11},
  url = {https://doi.org/10.1007/978-3-030-33624-0_11},
  urldate = {2020-04-25},
  abstract = {Among the software engineering activities, software testing is a crucial one which consumes more than 50\% of total cost and time needed in the development process. As quality is the most important criterion for successful delivery of the software, complete testing is the only way to achieve it. The various surveys conducted during the past few years reported not only the problems of exhaustive testing but also the problems associated with energy consumption and the overall impact on the environment due to dedicated hardware and other infrastructure resources utilized for testing. In traditional test environment, the quality management and testing activities are performed using the dedicated environmental set-up. This in turn alarmingly increases the amount of carbon emission in the environment. Hence, this chapter provides a key solution to make this higher energy-consuming task into a less energy-consuming one. The objective of this chapter is twofold: firstly, to provide a green software testing framework using cloud-based virtualization, and secondly, to apply cloud-based testing in Agile and DevOps-based software development environments. This chapter focuses on an important paradigm shift from traditional testing with dedicated resources to a cloud-based testing solution to achieve environmental protection. Hence, the testing activities which include the test case generation and execution to deliver quality software can now be achieved by means of cloud-based virtualization and by means of service on the cloud termed as TaaS (testing as a service).},
  isbn = {978-3-030-33624-0},
  keywords = {Agile,Cloud virtualization,DevOps,Green software testing,Software testing,TaaS,Testing as a service},
  langid = {english},
  series = {Computer {{Communications}} and {{Networks}}}
}

@article{kitchenhamGuidelinesPerformingSystematic2007,
  title = {Guidelines for Performing Systematic Literature Reviews in Software Engineering},
  author = {Kitchenham, Barbara and Charters, Stuart},
  date = {2007},
  publisher = {{Citeseer}}
}

@report{masson-delmotteGlobalWarming5C2018,
  title = {Global {{Warming}} of 1.{{5C}}},
  author = {Masson-Delmotte, V. and Zhai, P. and Pörtner, H.-O. and Roberts, D.},
  date = {2018},
  institution = {{IPCC}},
  abstract = {An IPCC Special Report on the impacts of global warming of 1.5C above pre-industrial levels and related global greenhouse gas emission pathways, in the context of strengthening the global response to the threat of climate change, sustainable development, and efforts to eradicate poverty},
  file = {/home/mael/Zotero/storage/IPTSUWA6/Masson-Delmotte et al. - 2018 - Global Warming of 1.5°C.pdf},
  langid = {english},
  series = {Press.}
}

@inproceedings{mouraoGreenSustainableSoftware2018,
  title = {Green and {{Sustainable Software Engineering}} - a {{Systematic Mapping Study}}},
  booktitle = {Proceedings of the 17th {{Brazilian Symposium}} on {{Software Quality}} - {{SBQS}}},
  author = {Mourão, Brunna C. and Karita, Leila and do Carmo Machado, Ivan},
  date = {2018},
  pages = {121--130},
  publisher = {{ACM Press}},
  location = {{Curitiba, Brazil}},
  doi = {10.1145/3275245.3275258},
  url = {http://dl.acm.org/citation.cfm?doid=3275245.3275258},
  urldate = {2020-04-20},
  abstract = {Understanding how the concepts of sustainability could be incorporated to the Software Engineering (SE) concepts has gained increased attention in the last years, particularly in terms of the Software Development Life Cycle (SDLC). Several studies have addressed the impact of sustainability in the SE practice, from a range of perspectives. This study presents a systematic mapping study that aggregates, summarizes and discusses the state-of-theart approaches for sustainable SE practice. We analyzed 75 relevant primary studies addressing methods, processes, tools and metrics proposed to support the software development in a sustainable way. The included primary studies were selected using inclusion and exclusion criteria applied to studies published prior to 2017. They were analyzed based on a set of classification criteria, including contribution types, SDLC phases, evidence types, research types, application domains, publication venues, distribution between academia and industry and research methods. The results indicated a growing interest by the SE research community in the Green and Sustainable software domain. Besides, there is an observed need for more studies on techniques, tools and metrics covering construction, testing and maintenance. The results also point out a clear view of the SE community about the need for a better alignment between research and practice in this domain.},
  eventtitle = {The 17th {{Brazilian Symposium}}},
  file = {/home/mael/Zotero/storage/PINKWT3L/Mourão et al. - 2018 - Green and Sustainable Software Engineering - a Sys.pdf},
  isbn = {978-1-4503-6565-9},
  langid = {english},
  options = {useprefix=true}
}

@article{naumannGREENSOFTModelReference2011,
  title = {The {{GREENSOFT Model}}: {{A}} Reference Model for Green and Sustainable Software and Its Engineering},
  shorttitle = {The {{GREENSOFT Model}}},
  author = {Naumann, Stefan and Dick, Markus and Kern, Eva and Johann, Timo},
  date = {2011-12-01},
  journaltitle = {Sustainable Computing: Informatics and Systems},
  shortjournal = {Sustainable Computing: Informatics and Systems},
  volume = {1},
  pages = {294--304},
  issn = {2210-5379},
  doi = {10.1016/j.suscom.2011.06.004},
  url = {http://www.sciencedirect.com/science/article/pii/S2210537911000473},
  urldate = {2020-04-25},
  abstract = {The resource and power consumption of ICT is still increasing, but also the benefits of ICT, e.g. in finding more efficient solutions for environmental problems. To date, it is not clear, whether the resource and energy savings through ICT overbalance the resource and energy consumption by ICT, or not. Up to now, manifold efforts of Green IT address the environmental aspects of sustainability considering computer hardware. However, there is still a lack of models, descriptions or realizations in the area of computer software and software process models. In our contribution, we first propose definitions of the terms “Green and Sustainable Software” and “Green and Sustainable Software Engineering”, then we outline a conceptual reference model, the GREENSOFT Model. This model includes a cradle-to-grave product life cycle model for software products, sustainability metrics and criteria for software, software engineering extensions for sustainably sound software design and development, as well as appropriate guidance.},
  file = {/home/mael/Zotero/storage/QMWCXQNN/Naumann et al. - 2011 - The GREENSOFT Model A reference model for green a.pdf;/home/mael/Zotero/storage/EXXZ3MWI/S2210537911000473.html},
  keywords = {Green by IT,Green IT,Green Software,GREENSOFT Reference Model,Software Engineering},
  langid = {english},
  number = {4}
}

@incollection{naumannSustainableSoftwareEngineering2015,
  title = {Sustainable Software Engineering: {{Process}} and Quality Models, Life Cycle, and Social Aspects},
  booktitle = {{{ICT Innovations}} for {{Sustainability}}},
  author = {Naumann, Stefan and Kern, Eva and Dick, Markus and Johann, Timo},
  date = {2015},
  pages = {191--205},
  publisher = {{Springer}}
}

@article{rashidAgilePracticesGlobal2018,
  title = {Agile Practices for Global Software Development Vendors in the Development of Green and Sustainable Software},
  author = {Rashid, Nasir and Khan, Siffat Ullah},
  date = {2018},
  journaltitle = {Journal of Software: Evolution and Process},
  volume = {30},
  pages = {e1964},
  issn = {2047-7481},
  doi = {10.1002/smr.1964},
  url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1964},
  urldate = {2020-04-20},
  abstract = {Over the last decade, the use of agile methods has grown dramatically for software development. Agile methods guarantee to accelerate the delivery of remarkable software with increased user satisfaction and reduced cost. However, in recent years, due to emergence of green software engineering, software developers are compelled to focus more on green and sustainable aspects of software. Global software engineering aims to design, develop, and use a software with limited energy and computing resources. Recently, software engineers in global software development (GSD) have adapted agile methods for quick, interactive, and environment-friendly software development. However, there is a lack of specific practices to be followed by GSD vendors in the development of green and sustainable software. In this study, we have identified 36 agile practices through systematic literature review and applied contrived search criteria derived from the research questions; 53 relevant papers were identified and reviewed. Findings of the systematic literature review were then empirically validated through questionnaire survey in GSD industry, in which 106 relevant experts from 25 different countries participated. The identified agile practices are intended to assist GSD vendors in strengthening their agile maturity towards green and sustainable software development.},
  file = {/home/mael/Zotero/storage/ASREWGG9/Rashid et Khan - 2018 - Agile practices for global software development ve.pdf;/home/mael/Zotero/storage/C83E4NPR/smr.html},
  keywords = {agile practices,empirical study,global software development vendor,green and sustainable software,success factors,systematic literature review},
  langid = {english},
  note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.1964},
  number = {10}
}

@inproceedings{robillardSustainableSoftwareDesign2016,
  title = {Sustainable Software Design},
  booktitle = {Proceedings of the 2016 24th {{ACM SIGSOFT International Symposium}} on {{Foundations}} of {{Software Engineering}} - {{FSE}} 2016},
  author = {Robillard, Martin P.},
  date = {2016},
  pages = {920--923},
  publisher = {{ACM Press}},
  location = {{Seattle, WA, USA}},
  doi = {10.1145/2950290.2983983},
  url = {http://dl.acm.org/citation.cfm?doid=2950290.2983983},
  urldate = {2020-04-20},
  abstract = {Although design plays a central role in software development, the information produced in this activity is often left to progressively evaporate as the result of software evolution, loss of artifacts, or the fading of related knowledge held by the development team. This paper introduces the concept of sustainability for software design, and calls for its integration into the existing catalog of design quality attributes. Applied to software design, sustainability conveys the idea that a particular set of design decisions and their rationale can be succinctly reflected in the host technology and/or described in documentation in a way that is checkable for conformance with the code and generally resistant to evaporation. The paper discusses the relation between sustainability and existing research areas in software engineering, and highlights future research challenges related to sustainable software design.},
  eventtitle = {The 2016 24th {{ACM SIGSOFT International Symposium}}},
  file = {/home/mael/Zotero/storage/5ZSPEP9J/Robillard - 2016 - Sustainable software design.pdf},
  isbn = {978-1-4503-4218-6},
  langid = {english}
}

@inproceedings{verdecchiaEstimatingEnergyImpact2017,
  title = {Estimating {{Energy Impact}} of {{Software Releases}} and {{Deployment Strategies}}: {{The KPMG Case Study}}},
  shorttitle = {Estimating {{Energy Impact}} of {{Software Releases}} and {{Deployment Strategies}}},
  booktitle = {2017 {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}} ({{ESEM}})},
  author = {Verdecchia, Roberto and Procaccianti, Giuseppe and Malavolta, Ivano and Lago, Patricia and Koedijk, Joost},
  date = {2017-11},
  pages = {257--266},
  doi = {10.1109/ESEM.2017.39},
  abstract = {Background. Often motivated by optimization objectives, software products are characterized by different subsequent releases and deployed through different strategies. The impact of these two aspects of software on energy consumption has still to be completely understood and can be improved by carrying out ad-hoc analyses for specific software products. Aims. In this research we report on an industrial collaboration aiming at assessing the different impact that releases and deployment strategies of a software product can have on the energy consumption of its underlying hardware infrastructure. Method. We designed and performed an empirical experiment in a controlled environment. Deployment strategies, releases and use case scenarios of an industrial third-party software product were adopted as experimental factors. The use case scenarios were used as a blocking factor and adopted to dynamically load-test the software product. Power consumption and execution time were selected as response variables to measure the energy consumption. Results. We observed that both deployment strategies and software releases significantly influence the energy consumption of the hardware infrastructure. A strong interaction between the two factors was identified. The impact of such interaction highly varied depending on which use case scenario was considered, making the identification of the most frequently adopted use case scenario critical for energy optimisation. The collaboration between industry and academia has been productive for both parties, even if some practitioners manifested low interest/awareness on software energy efficiency. Conclusions. For the software product considered there is no absolute preferable release or deployment strategy with respect to energy efficiency, as the interaction of these factors has to be considered. The number of machines involved in a software deployment strategy does not simply constitute an additive effect of the energy consumption of the underlying hardware infrastructure.},
  eventtitle = {2017 {{ACM}}/{{IEEE International Symposium}} on {{Empirical Software Engineering}} and {{Measurement}} ({{ESEM}})},
  file = {/home/mael/Zotero/storage/5CU9PTC2/Verdecchia et al. - 2017 - Estimating Energy Impact of Software Releases and .pdf;/home/mael/Zotero/storage/ATLX8X2N/8170112.html},
  keywords = {Deployment,Energy,energy consumption,Energy consumption,energy impact,Energy measurement,energy optimisation,execution time,Hardware,KPMG case study,Market research,Optimization,power aware computing,Software,software deployment strategy,software energy efficiency,software engineering,software maintenance,Software measurement,software packages,software quality,software releases,Software Releases,third-party software product,use case scenario}
}


