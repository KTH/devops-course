name: Check task

# Controls when the workflow will run
on:
  pull_request_target:
    branches:
      - 2024
    paths:
      - contributions/**

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-affected-files:
    name: Check affected files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45

      - name: Check affected files
        env:
          # get all affected files (created, modified, deleted, etc.)
          FILES: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
          FILES_COUNT: ${{ steps.changed-files.outputs.all_changed_and_modified_files_count }}
        run: |
          for file in "$FILES"; do
            echo "Info: $file was changed"
          done
          if [ "$FILES_COUNT" -ne 1 ]; then
            echo "Error: More than one file affected ($FILES_COUNT)"
            exit 1
          fi
          if [[ "$FILES" =~ ^contributions\/(executable-tutorial|feedback|open-source)\/[^\/]+\/README\.md$ ]]; then
            echo "Info: Matches async task"
          elif [[ "$FILES" =~ ^contributions\/(demo|presentation|scientific-paper)\/week[2-7]\/[^\/]+\/README\.md$ ]]; then
            echo "Info: Matches sync task"
          else
            echo "Error: File in wrong directory ($FILES)"
            exit 1
          fi

  check-canvas:
    name: Check proposal is compatible with previous student task registrations

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
           ref: ${{ github.event.pull_request.head.sha }}
      
      - name: 'Get tools'
        uses: actions/checkout@v2.3.4
        with:
          repository: KTH/github-canvas-integration-devops
          ref: main
          path: canvas-code

     # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f ./canvas-code/requirements.txt ]; then pip install -r ./canvas-code/requirements.txt; fi
      # Runs a single command using the runners shell
      - name: Update grading in canvas
        env:
          CANVAS_TOKEN: ${{ secrets.CANVAS_TOKEN }}
          CANVAS_COURSE_ID: ${{ secrets.CANVAS_COURSE_ID }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_REPO_FULLNAME: ${{ secrets.GH_REPO_FULLNAME }}
        run: |
          export PYTHONPATH="$PWD/canvas-code/utils"
          python ./canvas-code/update_task.py --mode check --pr ${{github.event.number}}
